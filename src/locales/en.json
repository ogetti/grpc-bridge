{
    "common": {
        "loading": "Loading...",
        "error": "Error",
        "success": "Success",
        "cancel": "Cancel",
        "save": "Save",
        "delete": "Delete",
        "edit": "Edit",
        "close": "Close",
        "confirm": "Confirm",
        "back": "Back",
        "next": "Next",
        "previous": "Previous",
        "search": "Search",
        "clear": "Clear",
        "refresh": "Refresh",
        "settings": "Settings",
        "rootRegistered": "Root registered",
        "selectAll": "All",
        "selectNone": "None",
        "format": "Format",
        "showDiff": "Show Diff",
        "hideDiff": "Hide Diff",
        "warning": "Warning",
        "optional": "Optional"
    },
    "app": {
        "title": "gRPC Bridge",
        "description": "A modern gRPC testing tool",
        "language": "Language"
    },
    "protoFiles": {
        "title": "Proto Files",
        "scanDirectory": "Scan Directory",
        "addFile": "Add File",
        "noFiles": "No proto files found",
        "scanning": "Scanning proto files...",
        "selectDirectory": "Select Directory",
        "removeFile": "Remove File",
        "fileCount": "{{count}} file",
        "fileCount_plural": "{{count}} files",
        "protoRootPath": "Proto Root Path",
        "pathPlaceholder": "/abs/path/to/protos",
        "selectRoot": "Select root",
        "confirmRemove": "Remove this root?",
        "removeSuccess": "Root removed successfully",
        "removeRoot": "Remove Root"
    },
    "grpc": {
        "configuration": "Configuration",
        "target": "Target",
        "targetPlaceholder": "localhost:50051",
        "service": "Service",
        "method": "Method",
        "selectService": "Select a service",
        "selectMethod": "Select a method",
        "request": "Request",
        "requestPayload": "Request Payload",
        "headers": "Headers",
        "metadata": "Metadata",
        "addHeader": "Add Header",
        "headerKey": "Key",
        "headerValue": "Value",
        "sendRequest": "Send Request",
        "response": "Response",
        "responseTime": "Response Time",
        "status": "Status",
        "noResponse": "No response yet",
        "connectionError": "Connection Error",
        "timeout": "Timeout",
        "invalidJson": "Invalid JSON format",
        "requestSent": "Request sent successfully",
        "requestFailed": "Request failed",
        "skeleton": "Skeleton",
        "noPreviousPayload": "No previous payload",
        "payloadPlaceholder": "{\"key\": \"value\"}",
        "authToken": "Auth Token",
        "authTokenPlaceholder": "Bearer token",
        "autoAuth": "Auto add Authorization header",
        "executeRequest": "Test Request"
    },
    "menu": {
        "file": "File",
        "edit": "Edit",
        "view": "View",
        "help": "Help",
        "about": "About",
        "preferences": "Preferences",
        "quit": "Quit"
    },
    "errors": {
        "networkError": "Network connection error",
        "invalidTarget": "Invalid target address",
        "protoParseError": "Failed to parse proto file",
        "serviceNotFound": "Service not found",
        "methodNotFound": "Method not found",
        "invalidPayload": "Invalid request payload",
        "pathEmpty": "Path empty",
        "protoRootRequired": "Proto root path required",
        "serviceMethodRequired": "Service & Method required",
        "selectProtoFile": "Select at least one proto file",
        "noRoot": "No root",
        "skeletonFailed": "Skeleton failed",
        "removeFailed": "Remove failed",
        "diffParseError": "Diff parse error"
    },
    "response": {
        "copy": "Copy",
        "copySuccess": "Copied",
        "copyFail": "Copy failed"
    },
    "history": {
        "title": "History",
        "clear": "Clear",
        "noHistory": "No request history",
        "savedRequests": "Saved Requests",
        "saveRequest": "Save Request",
        "loadRequest": "Load Request",
        "confirmClear": "Clear history?",
        "noCalls": "No calls",
        "deleteEntry": "Delete entry"
    }
}